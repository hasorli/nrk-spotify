package main

import (
	"fmt"
	"github.com/docopt/docopt-go"
	"github.com/mitchellh/colorstring"
	"net/http"
	"strings"
)

type Args struct {
	Auth         bool
	Server       bool
	Listen       string
	TokenFile    string
	ClientId     string
	ClientSecret string
	Scope        string
}

func parseArgs(args map[string]interface{}) Args {
	auth := args["auth"].(bool)
	server := args["server"].(bool)
	listenOption := args["--listen"]
	tokenFileOption := args["--token-file"]
	clientId := args["<client-id>"].(string)
	clientSecret := args["<client-secret>"].(string)

	listen := ":8080"
	if listenOption != nil {
		listen = listenOption.(string)
	}
	tokenFile := ".token.json"
	if tokenFileOption != nil {
		tokenFile = tokenFileOption.(string)
	}
	scope := "playlist-modify playlist-modify-private " +
		"playlist-read-private"
	return Args{
		Auth:         auth,
		Listen:       listen,
		Server:       server,
		TokenFile:    tokenFile,
		ClientId:     clientId,
		ClientSecret: clientSecret,
		Scope:        scope,
	}
}

func (args *Args) Url() string {
	if strings.HasPrefix(args.Listen, ":") {
		return "http://localhost" + args.Listen
	}
	return "http://" + args.Listen
}

func (args *Args) CallbackUrl() string {
	return args.Url() + "/callback"
}

func main() {
	usage := `Listen to NRK radio channels in Spotify.

Usage:
  nrk-spotify auth [-l <address>] [-f <token-file>] <client-id> <client-secret>
  nrk-spotify server [-f <token-file>]
  nrk-spotify -h | --help

Options:
  -h --help                     Show help.
  -f --token-file=<token-file>  Token file to use. Generated by auth command
  -l --listen=<address>         Listening address for Spotify auth server.`

	arguments, _ := docopt.Parse(usage, nil, true, "", false)
	args := parseArgs(arguments)

	if args.Auth {
		spotifyAuth := SpotifyAuth{
			ClientId:     args.ClientId,
			ClientSecret: args.ClientSecret,
			CallbackUrl:  args.CallbackUrl(),
			TokenFile:    args.TokenFile,
			Scope:        args.Scope,
		}
		http.HandleFunc("/login", spotifyAuth.login)
		http.HandleFunc("/callback", spotifyAuth.callback)

		fmt.Printf(colorstring.Color(
			"Visit [green]%s/login[reset] to authenticate "+
				"with Spotify.\n"), args.Url())
		fmt.Printf(colorstring.Color(
			"Listening at [green]%s[reset]\n"), args.Listen)
		http.ListenAndServe(args.Listen, nil)
	}
	if args.Server {
		// XXX: Run sync server
	}
}
